{
"description": "Read ALIGNED data from multiple library CRAM files producing merged output in CRAM format: full PG history, complete SQ lines, adapter marking, etc. The seqchksum file merged from the originals is compared with the seqchksum produced post merge.The input cram is already expected to have been sorted by coordinates with the adddupmarksupport flag specified",
"version":"0.5",
"subst_params": [
	{
		"id":"basic_pipeline_params_file",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", "alignment_common.json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
	{
		"id": "basic_pipeline_params",
		"type":"SPFILE",
		"name":{"subst":"basic_pipeline_params_file"},
		"required": "no",
		"comment":"this will expand to a set of subst_param elements"
	},
  {       "id":"java_re",
                "required":"no",
                "default":"/nfs/gs01/tmp/jillian/jdk1.8.0_74/bin/java",
                "comment":"Picard requires java version 1.8.x"
   },
  {       "id":"picard_executable",
                "required":"no",
                "default":"/nfs/gs01/tmp/jillian/Picard/picard.jar"
   },
	{ 
		"id":"incrams", 
		"required":"yes", 
		"default":"",
		"comment":"An iRODS path can be specified here"
	},
  {
                "id":"pmd_metrics_file_flag",
                "required":"no",
                "subst_constructor":{
                        "vals":[ "M=", {"subst":"outdatadir"}, "/", {"subst":"library"}, ".markdups_metrics.txt" ],
                        "postproc":{"op":"concat", "pad":""}
                }
  },
	{ 
		"id":"incrams_seqchksum", 
		"required":"yes", 
		"default":"",
		"comment":"An iRODS path should not be used here"
	},
        {
	       "id":"qsort_file",
	       "required":"no",
               "subst_constructor":{
                   "vals":[ {"subst":"outdatadir"},"/", {"subst":"library"}, "pre_markdups.bam" ],
	           "postproc":{"op":"concat", "pad":""}
	        }
        },
	{"id":"final_output_prep_name","required":"no","default":"merge_final_output_prep"},
	{
		"id":"merge_final_output_prep",
		"required":"yes",
		"subst_constructor":{
			"vals":[ {"subst":"cfgdatadir"}, "/", {"subst":"final_output_prep_name"}, ".json" ],
			"postproc":{"op":"concat", "pad":""}
		}
	},
  {
             "id":"tmpdir_qname_sort",
             "required":"no",
             "subst_constructor":{
                   "vals":[ "TMP_DIR=",{"subst":"tmpdir"}, "/", "sortsamqname_tmp" ],
                   "postproc":{"op":"concat", "pad":""}
             }
   },
   {
             "id":"tmpdir_md",
             "required":"no",
             "subst_constructor":{
                   "vals":[ "TMP_DIR=",{"subst":"tmpdir"}, "/", "markduplicates_tmp" ],
                   "postproc":{"op":"concat", "pad":""}
             }
   },
   {
             "id":"tmpdir_sortsamcoord",
             "required":"no",
             "subst_constructor":{
                   "vals":[ "TMP_DIR=",{"subst":"tmpdir"}, "/", "sortsamcoord_tmp" ],
                   "postproc":{"op":"concat", "pad":""}
             }
   }
],
"nodes": [
	{
		"id":"crammerge",
		"type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": true,
		"orig_cmd":{"subst":"crammerge"},
		"cmd": [ "bammerge", "level=0", "SO=coordinate", "inputformat=cram", "outputformat=bam", {"subst":"incrams"} ],
		"description":"merge individual cram files from a sample into one cram file"
	},
  {
   "id":"picard_sort_qname",
   "type":"EXEC",
   "use_STDIN": true,
   "use_STDOUT": true,
   "cmd": [{"subst":"java_re"},"-Xmx2g","-jar",{"subst":"picard_executable"}, "SortSam", "I=/dev/stdin","O=/dev/stdout" , "SORT_ORDER=queryname", {"subst":"tmpdir_qname_sort"} ]
  },
  {
   "id":"qname_sorted_bam",
    "type":"RAFILE",
    "name":{"subst":"qsort_file"}
  },
  {
   "id":"picard_MarkDuplicates",
   "type":"EXEC",
   "use_STDIN": true,
   "use_STDOUT": true,
   "cmd": [{"subst":"java_re"},"-Xmx2g","-jar",{"subst":"picard_executable"}, "MarkDuplicates","I=/dev/stdin","O=/dev/stdout", {"subst":"pmd_metrics_file_flag"}, {"subst":"tmpdir_md"}]
  }, 
  {
  "id":"picard_sort_coord",
  "type":"EXEC",
  "use_STDIN": true,
  "use_STDOUT": true,
  "cmd": [{"subst":"java_re"},"-Xmx2g","-jar",{"subst":"picard_executable"}, "SortSam", "I=/dev/stdin", "O=/dev/stdout", "SORT_ORDER=coordinate", {"subst":"tmpdir_sortsamcoord"} ]
   },
	{
		"id": "merge_final_output_prep",
		"type": "VTFILE",
		"subst_map": { "bstmp":"bspaft", "brtmp":"brpaft", "bmdtmp":"bmdpaft" },
		"name": {"subst":"merge_final_output_prep"},
		"comment":"inputs: _stdin_ (bam); outputs: _stdout_ (seqchksum_file)",
		"description": "subgraph containing post alignment_filter process (target)"
	},
	{
		"id":"merge_seqchksum",
		"type":"EXEC",
		"use_STDIN": false,
		"use_STDOUT": true,
		"orig_cmd":{"subst":"merge_seqchksum"},
		"cmd":[ "seqchksum_merge.pl", {"subst":"incrams_seqchksum"} ],
		"description": "merge individual cram seqchksum (crc32prod) files"
	},
	{
		"id":"seqchksum_head5",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"type":"EXEC",
		"cmd":[ "head", "-5" ],
		"description":"Only use top 5 lines of seqchksum file for the comparison"
	},
	{
		"id":"seqchksumdefault_head5",
		"type":"EXEC",
		"use_STDIN": true,
		"use_STDOUT": true,
		"type":"EXEC",
		"cmd":[ "head", "-5" ],
		"description":"Only use top 5 lines of seqchksum file for the comparison."
	},
	{
		"id":"cmp_seqchksumdefault",
		"use_STDIN": true,
		"use_STDOUT": true,
		"type":"EXEC",
		"cmd":[ "cmp", "-s", "__MERGED_SEQCHKSUM_IN__" ],
		"description":"check input primary/sequence data matches output"
	}
],
  "edges": [
	{ "id": "crammerge_to_sort_qname", "from": "crammerge", "to": "picard_sort_qname" },
        { "id": "qname_to_file", "from": "picard_sort_qname", "to": "qname_sorted_bam" },
        { "id": "qname_to_picard_md", "from": "qname_sorted_bam", "to":"picard_MarkDuplicates" },
        { "id": "picard_md_to_coord_sort", "from": "picard_MarkDuplicates", "to": "picard_sort_coord" },
	{ "id": "picard_sort_to_final_output_prep", "from": "picard_sort_coord", "to": "merge_final_output_prep" },
	{ "id": "merge_seqchksum_to_seqchksumdefault_tee", "from": "merge_seqchksum", "to": "seqchksumdefault_head5" },
	{ "id": "seqchksumdefault_head5", "from":"seqchksumdefault_head5", "to":"cmp_seqchksumdefault:__MERGED_SEQCHKSUM_IN__" },
	{ "id": "final_output_prep_to_head5", "from": "merge_final_output_prep","to": "seqchksum_head5" },
	{ "id": "seqchksum_head5_to_cmp_seqchksumdefault", "from": "seqchksum_head5","to": "cmp_seqchksumdefault" }
]
}
